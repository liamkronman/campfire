[{"/Users/liamkronman/Documents/GitHub/campfire/app/src/index.js":"1","/Users/liamkronman/Documents/GitHub/campfire/app/src/reportWebVitals.js":"2","/Users/liamkronman/Documents/GitHub/campfire/app/src/App.js":"3"},{"size":500,"mtime":1645178529963,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1645178529964,"results":"6","hashOfConfig":"5"},{"size":4537,"mtime":1645439752585,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"i10met",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"11"},"/Users/liamkronman/Documents/GitHub/campfire/app/src/index.js",[],[],["19","20"],"/Users/liamkronman/Documents/GitHub/campfire/app/src/reportWebVitals.js",[],[],"/Users/liamkronman/Documents/GitHub/campfire/app/src/App.js",["21","22","23","24"],[],"import './App.css';\nimport React, { useRef, useEffect } from 'react';\nimport campfireBackground from './assets/campfire-background-mac.png';\nimport thefire1 from './assets/thefire.png';\nimport thefire2 from './assets/thefire_2.png';\nimport io from 'socket.io-client';\n\nfunction App() {\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [showInstruct, setShowInstruct] = React.useState(false);\n  const [inFire, setInFire] = React.useState(false);\n  const [socket, setSocket] = React.useState(null);\n  const [currMessageAuthor, setCurrMessageAuthor] = React.useState(\"\");\n  const [currMessage, setCurrMessage] = React.useState(\"\");\n  const [campName, setCampName] = React.useState(null);\n  const [frameNum, setFrameNum] = React.useState(1);\n  const [currFire, setCurrFire] = React.useState(thefire1);\n  const [timeWhenLastUpdate, setTimeWhenLastUpdate] = React.useState(null);\n  const [timeSinceLastUpdate, setTimeSinceLastUpdate] = React.useState(null);\n  const requestRef = React.useRef();\n\n  const handleInputChange = (event) => {\n    if (event.target.value.length > 0) {\n      setShowInstruct(true);\n    } else {\n      setShowInstruct(false);\n    }\n    setInputValue(event.target.value);\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      setCampName(inputValue);\n      setInFire(true)\n      const newSocket = io(`http://localhost:8080/api`);\n      setSocket(newSocket);\n    }\n  }\n\n  const handleTyping = (event) => {\n    socket.emit('message', `${campName}:${event.key}`);\n  }\n\n  useEffect(() => {\n    if (socket) {\n      socket.on('message', (message) => {\n        setCurrMessage(message.value)\n        setCurrMessageAuthor(message.user)\n      })\n      socket.on('deleteMessage', (message) => {\n        console.log('deleting message');\n        if (message.value === currMessage) {\n          setCurrMessage(\"\")\n          setCurrMessageAuthor(\"\")\n        }\n      })\n    }\n  })\n\n  const animate = (startTime) => {\n    if (!timeWhenLastUpdate) setTimeWhenLastUpdate(startTime);\n    setTimeSinceLastUpdate(startTime - timeWhenLastUpdate);\n    if (timeSinceLastUpdate > 4000) {\n      console.log('happening');\n      setTimeWhenLastUpdate(startTime);\n      if (frameNum >= 2) {\n        setFrameNum(1);\n      } else {\n        setFrameNum(frameNum + 1);\n      }\n      if (frameNum === 1) {\n        setCurrFire(thefire1);\n      } else {\n        setCurrFire(thefire2);\n      }\n    }\n\n    requestAnimationFrame(animate);\n  }\n\n  // useEffect(() => {\n  //     requestRef.current = requestAnimationFrame(animate);\n  //     return () => cancelAnimationFrame(requestRef.current);\n  // }, []);\n\n  return (\n    <>\n      {inFire \n        ? <div className=\"App\"\n          style={{\n            backgroundImage: `url(${campfireBackground})`,\n            backgroundSize: 'cover',\n          }} tabIndex=\"0\" onKeyPress={handleTyping} >\n            <div className=\"text-body\">\n              <div className=\"campfire-welcome-title\">Welcome<span style={{fontSize: 30}}> </span>to<span style={{fontSize: 30}}> </span><span style={{ color: \"#F35B22\", fontFamily: \"'Space Mono', monospace\", fontSize: '60px' }}>The<span style={{fontSize: 25}}> </span>Campfire</span></div>\n              {currMessage ? <div className=\"campfire-message\"><span className=\"message-author\">{currMessageAuthor}</span>:<span style={{fontSize: 25}}> </span>{currMessage}</div> : <div className=\"campfire-message\"> </div>}\n              <img src={currFire} className=\"the-fire\" />\n              <footer className=\"footer\">A Liam Kronman + Jason Seo Production</footer>\n            </div>\n          </div>\n        : <div className=\"App\"\n          style={{\n            backgroundImage: `url(${campfireBackground})`,\n            backgroundSize: 'cover',\n          }}>\n            <div className=\"text-body\">\n              <div className=\"campfire-title\">The<span style={{fontSize: 25}}> </span>Campfire</div>\n              <div className=\"campfire-subtitle\">Type like you talk.</div>\n              <div className=\"input-container\">\n                <input className=\"campname-input\" type=\"text\" value={inputValue} placeholder=\"Enter a camp name...\" onChange={handleInputChange} onKeyDown={handleKeyDown} />\n                {showInstruct \n                  ? <div className=\"campfire-input-instruction\">Press enter to join the fire...</div> \n                  : null}\n              </div>\n              <footer className=\"footer\">A Liam Kronman + Jason Seo Production</footer>\n            </div>\n          </div>}\n    </>\n  );\n}\n\nexport default App;",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":2,"column":17,"nodeType":"31","messageId":"32","endLine":2,"endColumn":23},{"ruleId":"29","severity":1,"message":"33","line":20,"column":9,"nodeType":"31","messageId":"32","endLine":20,"endColumn":19},{"ruleId":"29","severity":1,"message":"34","line":60,"column":9,"nodeType":"31","messageId":"32","endLine":60,"endColumn":16},{"ruleId":"35","severity":1,"message":"36","line":97,"column":15,"nodeType":"37","endLine":97,"endColumn":58},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'requestRef' is assigned a value but never used.","'animate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]